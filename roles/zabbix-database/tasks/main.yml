---
# Role: zabbix-database
# File: tasks/main.yml
- name: make sure mariadb-server is installed
  become: true
  yum:
    name: "mariadb-server"
    state: present
  tags:
    - zabbix
    - zabbix-database

- name: be sure zabbix-server-mysql is installed
  become: true
  yum:
    name: "zabbix-server-mysql"
    state: present
  tags:
    - zabbix
    - zabbix-database

- name: be sure the requirements are installed
  become: true
  yum:
    name: "MySQL-python"
    state: present
  tags:
    - zabbix
    - zabbix-database

- name: be sure the zabbix database data path exists
  become: true
  file: path={{ zabbix_database_path }} state=directory owner=mysql
        group=mysql mode=0755
  tags:
    - zabbix
    - zabbix-database

- name: be sure the mariadb database is configured
  become: true
  template: src="my.cnf.j2" dest=/etc/my.cnf
    owner="root" group="root" mode=0644
  notify:
    - restart mariadb
  tags:
    - zabbix
    - zabbix-database

- name: be sure mariadb-server is running and enabled
  become: true
  service:
    name: mariadb
    state: started
    enabled: yes
  tags:
    - zabbix
    - zabbix-database

- name: be sure the zabbix database is present
  become: true
  shell: /bin/mysql -e 'SHOW DATABASES;' | grep {{ zabbix_db_name }}
  register: databases
  failed_when: databases.rc > 1
  changed_when: 0
  tags:
    - zabbix
    - zabbix-database

- name: create the database if it doesn't exist
  become: true
  command: /usr/bin/mysql -e "create database {{ zabbix_db_name }} character set utf8 collate utf8_bin;"
  when: databases.rc != 0
  tags:
    - zabbix
    - zabbix-database

- name: allow access from the ZabbixServer address
  become: true
  mysql_user: name={{ zabbix_db_user }} password={{ zabbix_db_password }}
    priv={{ zabbix_db_name }}.*:ALL state=present host={{ ZabbixServer }}
  when: zabbix_server_frontend is defined
  tags:
    - zabbix
    - zabbix-database

#- name: allow one zabbix-server remote access if it's not running on the same host
#  become: true
#  mysql_user: name={{ zabbix_db_user }} password={{ zabbix_db_password }}
#    priv={{ zabbix_db_name }}.*:ALL state=present host={{ hostvars[groups['ZabbixServer'][0]]['ansible_enp0s8']['ipv4']['address'] }}
#  when: ("{{ hostvars[groups['ZabbixServer'][0]]['ansible_enp0s8']['ipv4']['address'] }}" != "{{ ansible_default_ipv4.address }}") and (ZabbixServer is not defined)
#  tags:
#    - zabbix
#    - zabbix-database

- name: allow the zabbix web server group access to the database
  become: true
  mysql_user: name={{ zabbix_db_web_user }} password={{ zabbix_db_web_password }}
    priv={{ zabbix_db_name }}.*:ALL state=present host={{ hostvars[groups['ZabbixServer'][0]]['ansible_enp0s8']['ipv4']['address'] }}
  tags:
    - zabbix
    - zabbix-database

- name: create the zabbix user for localhost
  become: true
  mysql_user: name={{ zabbix_db_user }} password={{ zabbix_db_password }}
    priv={{ zabbix_db_name }}.*:ALL state=present
  when: databases.rc != 0
  tags:
    - zabbix
    - zabbix-database

- name: find schema location
  become: true
  shell: /bin/ls /usr/share/doc | grep zabbix-server-mysql-{{ zabbix_version }} | tail -n 1
  register: contents
  when: databases.rc != 0
  tags:
    - zabbix
    - zabbix-database

- name: load the mysql schemas
  become: true
  shell: zcat /usr/share/doc/zabbix-server-mysql-3.0.3/{{ item }} | mysql -u root {{ zabbix_db_name }}
  with_items:
    - create.sql.gz
  when: databases.rc != 0
  tags:
    - zabbix
    - zabbix-database
